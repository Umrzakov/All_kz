/* global webkitSpeechRecognition */

import React, { useState } from "react";
import { Link } from "react-router-dom";
// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º products –∫–∞–∫ named import
import products from "./data/products.js";  // data –ø–∞–ø–∫–∞—Å—ã–Ω–∞ –±—ñ—Ä –¥–µ“£–≥–µ–π –∂–æ“ì–∞—Ä—ã


export default function SearchWithFilters() {
  const [query, setQuery] = useState("");
  const [category, setCategory] = useState("");
  const [filtered, setFiltered] = useState([]);

  const handleSearch = () => {
    const results = products.filter((item) => {
      const matchName = item.name.toLowerCase().includes(query.toLowerCase());
      const matchCategory = category ? item.category === category : true;
      return matchName && matchCategory;
    });
    setFiltered(results);
  };

  const handleVoiceInput = () => {
  const recognition = new window.webkitSpeechRecognition() || new window.SpeechRecognition();
  recognition.lang = "ru-RU"; // –º–æ–∂–µ—à—å —Å–º–µ–Ω–∏—Ç—å –Ω–∞ "kk-KZ" –∏–ª–∏ "en-US"
  recognition.start();

  recognition.onresult = (event) => {
let voiceText = event.results[0][0].transcript.trim();
voiceText = voiceText.replace(/[.,!?]+$/, ""); // —É–±–∏—Ä–∞–µ—Ç —Ç–æ—á–∫—É, –∑–∞–ø—è—Ç—É—é, –≤–æ—Å–∫–ª. –∑–Ω–∞–∫ –∏ –ø—Ä.
    setQuery(voiceText);
    setTimeout(() => handleSearch(), 200); // –∑–∞–ø—É—Å—Ç–∏–º –ø–æ–∏—Å–∫ –ø–æ—Å–ª–µ —Ä–µ—á–∏
  };

  recognition.onerror = (e) => {
    console.error("–û—à–∏–±–∫–∞ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –≤–≤–æ–¥–∞:", e);
    alert("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–∏ –≥–æ–ª–æ—Å–∞");
  };
};

  return (
    <div className="border rounded-lg p-4 shadow-sm bg-white">
      <h2 className="text-xl font-semibold mb-4">üîç –ü–æ–∏—Å–∫ —Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏</h2>

      <div className="flex flex-col md:flex-row gap-4 mb-4">
        <input
            value={query}
            onChange={(e) => setQuery(e.target.value)}
            placeholder="–ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é"
            className="border px-3 py-2 rounded w-full"
        />
        <select
            value={category}
            onChange={(e) => setCategory(e.target.value)}
            className="border px-3 py-2 rounded w-full md:w-60"
        >
          <option value="">–í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</option>
          <option>–¢–µ–ª–µ—Ñ–æ–Ω—ã</option>
          <option>–ö–æ–º–ø—å—é—Ç–µ—Ä—ã</option>
          <option>–û–¥–µ–∂–¥–∞</option>
          <option>–ë—ã—Ç–æ–≤–∞—è —Ç–µ—Ö–Ω–∏–∫–∞</option>
        </select>
        <button
            onClick={handleSearch}
            className="bg-blue-600 text-white px-6 py-2 rounded hover:bg-blue-700"
        >
          –ù–∞–π—Ç–∏
        </button>
        <button
            onClick={handleVoiceInput}
            className="bg-gray-200 text-black px-4 py-2 rounded hover:bg-gray-300"
        >
          üé§
        </button>

      </div>

      <div className="grid gap-4 md:grid-cols-2 lg:grid-cols-3">
        {filtered.map((item) => (
            <div key={item.id} className="border rounded-lg p-4 shadow-sm flex flex-col">
            <img
              src={item.image}
              alt={item.name}
              className="w-full h-40 object-cover rounded mb-2"
            />
            <h3 className="font-semibold">{item.name}</h3>
            <p className="text-gray-600">{item.category}</p>
            <p className="text-blue-600 font-bold mb-2">{item.price}</p>

            <Link to={`/product/${item.id}`} className="mt-auto">
              <button className="bg-blue-500 text-white w-full px-4 py-2 rounded hover:bg-blue-600">
                –ü–æ–¥—Ä–æ–±–Ω–µ–µ
              </button>
            </Link>
          </div>
        ))}
        {filtered.length === 0 && (
          <p className="text-gray-500">
            –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å.
          </p>
        )}
      </div>
    </div>
  );
}
