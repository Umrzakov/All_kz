import React, { useState, useEffect } from "react";
import { Link } from "react-router-dom";

export default function SearchWithFilters() {
  const [query, setQuery] = useState("");
  const [category, setCategory] = useState("");
  const [filtered, setFiltered] = useState([]);
  const [loading, setLoading] = useState(true); // –§–ª–∞–≥ –∑–∞–≥—Ä—É–∑–∫–∏

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤ —Å —Å–µ—Ä–≤–µ—Ä–∞
  const loadProducts = async () => {
    try {
      setLoading(true); // –í–∫–ª—é—á–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
      const res = await fetch(`http://localhost:3001/api/products?query=${query}&category=${category}`);
      const data = await res.json();
      setFiltered(data); // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ç–æ–≤–∞—Ä–æ–≤:", error);
    } finally {
      setLoading(false); // –í—ã–∫–ª—é—á–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
    }
  };

  useEffect(() => {
    loadProducts(); // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–≤–∞—Ä—ã –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ query –∏–ª–∏ category
  }, [query, category]);

  const handleSearch = () => {
    loadProducts(); // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–≤–∞—Ä—ã –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
  };

  const handleVoiceInput = () => {
    const recognition = new window.webkitSpeechRecognition() || new window.SpeechRecognition();
    recognition.lang = "ru-RU";
    recognition.start();

    recognition.onresult = (event) => {
      let voiceText = event.results[0][0].transcript.trim();
      voiceText = voiceText.replace(/[.,!?]+$/, ""); // —É–±–∏—Ä–∞–µ—Ç —Ç–æ—á–∫—É, –∑–∞–ø—è—Ç—É—é –∏ —Ç.–¥.
      setQuery(voiceText);
      setTimeout(() => handleSearch(), 200); // –∑–∞–ø—É—Å–∫–∞–µ–º –ø–æ–∏—Å–∫ —á–µ—Ä–µ–∑ 200 –º—Å –ø–æ—Å–ª–µ —Ä–µ—á–∏
    };

    recognition.onerror = (e) => {
      console.error("–û—à–∏–±–∫–∞ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –≤–≤–æ–¥–∞:", e);
      alert("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–∏ –≥–æ–ª–æ—Å–∞");
    };
  };

  return (
    <div className="border rounded-lg p-4 shadow-sm bg-white">
      <h2 className="text-xl font-semibold mb-4">üîç –ü–æ–∏—Å–∫ —Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏</h2>

      <div className="flex flex-col md:flex-row gap-4 mb-4">
        <input
          value={query}
          onChange={(e) => setQuery(e.target.value)}
          placeholder="–ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é"
          className="border px-3 py-2 rounded w-full"
        />
        <select
          value={category}
          onChange={(e) => setCategory(e.target.value)}
          className="border px-3 py-2 rounded w-full md:w-60"
        >
          <option value="">–í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</option>
          <option>–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞</option>
          <option>–¢–µ—Ö–Ω–∏–∫–∞</option>
          <option>–ê–∫—Å–µ—Å—Å—É–∞—Ä—ã</option>
          <option>–ò–≥—Ä—ã</option>
        </select>
        <button
          onClick={handleSearch}
          className="bg-blue-600 text-white px-6 py-2 rounded hover:bg-blue-700"
        >
          –ù–∞–π—Ç–∏
        </button>
        <button
          onClick={handleVoiceInput}
          className="bg-gray-200 text-black px-4 py-2 rounded hover:bg-gray-300"
        >
          üé§
        </button>
      </div>

      {loading ? (
        <p>–ó–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤...</p>
      ) : (
        <div className="grid gap-4 md:grid-cols-2 lg:grid-cols-3">
          {filtered.length === 0 ? (
            <p className="text-gray-500">–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å.</p>
          ) : (
            filtered.map((item) => (
              <div key={item._id} className="border rounded-lg p-4 shadow-sm flex flex-col">
                <img
                  src={item.image}
                  alt={item.name}
                  className="w-full h-40 object-cover rounded mb-2"
                />
                <h3 className="font-semibold">{item.name}</h3>
                <p className="text-gray-600">{item.category}</p>
                <p className="text-blue-600 font-bold mb-2">{item.price} ‚Ç∏</p>

                <Link to={`/product/${item._id}`} className="mt-auto">
                  <button className="bg-blue-500 text-white w-full px-4 py-2 rounded hover:bg-blue-600">
                    –ü–æ–¥—Ä–æ–±–Ω–µ–µ
                  </button>
                </Link>
              </div>
            ))
          )}
        </div>
      )}
    </div>
  );
}
